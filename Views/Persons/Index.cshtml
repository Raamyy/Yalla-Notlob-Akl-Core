@using Yalla_Notlob_Akl.Models
@model List<Person>

@{
    ViewData["Title"] = "Persons Page";
}

<head>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <link rel="stylesheet" href="~/lib/FullTable/jquery.fulltable.css" />
</head>

<style>
    .table td, .table th {
        vertical-align: middle;
    }
    td,
    th {
        text-align: center;
        vertical-align: middle;
    }

    input {
        border-radius: 12px;
    }

    a.button {
        position: relative;
        display: inline-block;

        font-family: tahoma, arial, helvetica;
        font-size: 9pt;
        font-weight: bold;

        color: #ffffff;
        background-color: #AAAAAA;

        padding: 5px;

        text-decoration: none;

        -webkit-border-radius: 5px;
        -moz-border-radius: 5px;
        border-radius: 5px;
    }
</style>

<div class="container">
    <h2>Persons</h2>
    <table class="fulltable fulltable-editable table table-bordered table-hover" id="persons-table">
        <thead>
            <tr>
                <th fulltable-field-name="PersonId" hidden></th>
                <th fulltable-field-name="PersonName">Person Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in Model)
            {
                <tr>
                    <td hidden><span>@person.id</span></td>
                    <td><span>@person.name</span></td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script type="text/javascript">
    $(
        function () {
            let ft = $("#persons-table").FullTable(
                {
                    "alwaysCreating": true,
                    "fields":
                    {
                        "PersonId":
                        {
                            "mandatory": false,
                            "hidden": true
                        },
                        "PersonName":
                        {
                            "mandatory": true,
                            "placeholder": "Enter person name",
                            "errors": {
                                "mandatory": "Person name is mandatory"
                            }
                        },
                    },
                    "onSave": async function (person) {
                        if (person.PersonId) { // update
                            const response = await AjaxCall("@Url.Action("Update")", ({ id: person.PersonId, name: person.PersonName }))
                            return response == true;
                        } else { // create
                            const response = await AjaxCall("@Url.Action("Add")", JSON.stringify({ name: person.PersonName }))
                            if (response.id) {
                                $(person.__dom).find("td[fulltable-field-name=PersonId]").find("input").val(response.id)
                                return true
                            }
                            return false;
                        }
                    },
                }
            );

            $("#persons-table").FullTable("on", "error", function (errors) {
                for (var error in errors) {
                    error = errors[error];
                    console.log(error);
                }
            });
            $("persons-table").FullTable("draw");
        }
    );
</script>